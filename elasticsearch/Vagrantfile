# -*- mode: ruby -*-
# vi: set ft=ruby :
#
# Define machine specs
boxes = [
    { :name => "c1", :size => "2gb"},
    { :name => "e1", :size => "4gb"},
    { :name => "e2", :size => "4gb"},
    { :name => "e3", :size => "8gb"},
]

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # 
  # Provision my servers on digital_ocean using the given pk.
  config.vm.box = "digital_ocean"
  # config.vm.box_url = "https://github.com/devopsgroup-io/vagrant-digitalocean/raw/master/box/digital_ocean.box"
  config.ssh.private_key_path = "~/.ssh/id_rsa_do"

  # Disable synced folder https://github.com/devopsgroup-io/vagrant-digitalocean/issues/41
  config.vm.synced_folder '.', '/vagrant', :disabled => true


  # Create multiple machines using the boxes definition.
  #  name and size.
  boxes.each do |opts|
    config.vm.define opts[:name] do |config|
      config.vm.hostname = opts[:name]
    end

    #  Get the token from digitalocean web panel, then
    #   gather image, region and size names using:
    #   vagrant digitalocean-list [images|regions|sizes] $TOKEN 
    config.vm.provider "digital_ocean" do |ocean|
      ocean.token = ENV['token']
      ocean.image = "centos-7-x64"
      ocean.region = "fra1"
      ocean.size = opts[:size]
    end
    
  end

  # Vagrant creates an inventory file in 
  #  .vagrant/provisioners
  #  adding each machine in the given group.
  config.vm.provision "ansible" do |ansible|
    ansible.verbose = "vvv"
    ansible.playbook = "provisioning/playbook.yml"
    ansible.groups = {
      "elastic" => ["e1", "e2", "e3"],
      "client" => ["c1"]
    }

    
#    ansible.inventory_path = "provisioning/inventory"
  end

end
